apiVersion: v1
items:
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app.kubernetes.io/created-by":"resource-stack","app.kubernetes.io/managed-by":"Lens","app.kubernetes.io/name":"lens-metrics"},"name":"prometheus","namespace":"lens-metrics"},"spec":{"replicas":1,"selector":{"matchLabels":{"name":"prometheus"}},"serviceName":"prometheus","template":{"metadata":{"labels":{"name":"prometheus"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"args":["--web.listen-address=0.0.0.0:9090","--config.file=/etc/prometheus/prometheus.yaml","--storage.tsdb.path=/var/lib/prometheus","--storage.tsdb.retention.time=2d","--storage.tsdb.retention.size=5GiB","--storage.tsdb.min-block-duration=2h","--storage.tsdb.max-block-duration=2h"],"image":"quay.io/prometheus/prometheus:v2.51.0","livenessProbe":{"httpGet":{"path":"/-/healthy","port":9090},"initialDelaySeconds":10,"timeoutSeconds":10},"name":"prometheus","ports":[{"containerPort":9090,"name":"web"}],"readinessProbe":{"httpGet":{"path":"/-/ready","port":9090},"initialDelaySeconds":10,"timeoutSeconds":10},"resources":{"requests":{"cpu":"100m","memory":"512Mi"}},"volumeMounts":[{"mountPath":"/etc/prometheus","name":"config"},{"mountPath":"/etc/prometheus/rules","name":"rules"},{"mountPath":"/var/lib/prometheus","name":"data"}]}],"initContainers":[{"command":["chown","-R","65534:65534","/var/lib/prometheus"],"image":"docker.io/alpine:3.12","name":"chown","volumeMounts":[{"mountPath":"/var/lib/prometheus","name":"data"}]}],"serviceAccountName":"prometheus","terminationGracePeriodSeconds":30,"volumes":[{"configMap":{"name":"prometheus-config"},"name":"config"},{"configMap":{"name":"prometheus-rules"},"name":"rules"}]}},"volumeClaimTemplates":[{"metadata":{"name":"data"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"20Gi"}}}}]}}
    creationTimestamp: "2024-09-19T20:04:40Z"
    generation: 1
    labels:
      app.kubernetes.io/created-by: resource-stack
      app.kubernetes.io/managed-by: Lens
      app.kubernetes.io/name: lens-metrics
    name: prometheus
    namespace: lens-metrics
    resourceVersion: "20145121"
    uid: 6f09ef50-858b-4b9f-8dbe-b5ab2830e3c9
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: prometheus
    serviceName: prometheus
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: prometheus
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - --web.listen-address=0.0.0.0:9090
          - --config.file=/etc/prometheus/prometheus.yaml
          - --storage.tsdb.path=/var/lib/prometheus
          - --storage.tsdb.retention.time=2d
          - --storage.tsdb.retention.size=5GiB
          - --storage.tsdb.min-block-duration=2h
          - --storage.tsdb.max-block-duration=2h
          image: quay.io/prometheus/prometheus:v2.51.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: prometheus
          ports:
          - containerPort: 9090
            name: web
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/prometheus
            name: config
          - mountPath: /etc/prometheus/rules
            name: rules
          - mountPath: /var/lib/prometheus
            name: data
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - chown
          - -R
          - 65534:65534
          - /var/lib/prometheus
          image: docker.io/alpine:3.12
          imagePullPolicy: IfNotPresent
          name: chown
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/prometheus
            name: data
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: prometheus
        serviceAccountName: prometheus
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-config
          name: config
        - configMap:
            defaultMode: 420
            name: prometheus-rules
          name: rules
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: prometheus-5c48b46b8c
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: prometheus-5c48b46b8c
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
