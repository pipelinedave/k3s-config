apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui
  namespace: kafka
  labels:
    app.kubernetes.io/name: kafka-ui
    app.kubernetes.io/instance: kafka-ui
    app.kubernetes.io/version: "0.7.1"
    app.kubernetes.io/component: ui
    app.kubernetes.io/part-of: kafka
    app.kubernetes.io/managed-by: flux
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kafka-ui
      app.kubernetes.io/instance: kafka-ui
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kafka-ui
        app.kubernetes.io/instance: kafka-ui
        app.kubernetes.io/version: "0.7.1"
        app.kubernetes.io/component: ui
        app.kubernetes.io/part-of: kafka
        app.kubernetes.io/managed-by: flux
    spec:
      containers:
      - name: kafka-ui
        image: provectuslabs/kafka-ui:v0.7.1
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: KAFKA_CLUSTERS_0_NAME
          value: "local"
        - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
          value: "kafka:9092"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui
  namespace: kafka
  labels:
    app.kubernetes.io/name: kafka-ui
    app.kubernetes.io/instance: kafka-ui
    app.kubernetes.io/component: ui-service
    app.kubernetes.io/part-of: kafka
    app.kubernetes.io/managed-by: flux
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: kafka-ui
    app.kubernetes.io/instance: kafka-ui
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kafka-ui
  namespace: kafka
  labels:
    app.kubernetes.io/name: kafka-ui
    app.kubernetes.io/instance: kafka-ui
    app.kubernetes.io/component: ui-ingress
    app.kubernetes.io/part-of: kafka
    app.kubernetes.io/managed-by: flux
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - kafka-ui.stillon.top
    secretName: kafka-ui-tls
  rules:
  - host: kafka-ui.stillon.top
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kafka-ui
            port:
              number: 8080