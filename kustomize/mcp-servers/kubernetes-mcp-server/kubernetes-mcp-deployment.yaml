apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernetes-mcp-server
  namespace: mcp-servers
  labels:
    app.kubernetes.io/name: kubernetes-mcp-server
    app.kubernetes.io/instance: kubernetes-mcp-server
    app.kubernetes.io/component: mcp-server
    app.kubernetes.io/part-of: mcp-suite
    app.kubernetes.io/managed-by: flux
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-mcp-server
      app.kubernetes.io/instance: kubernetes-mcp-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubernetes-mcp-server
        app.kubernetes.io/instance: kubernetes-mcp-server
        app.kubernetes.io/component: mcp-server
        app.kubernetes.io/part-of: mcp-suite
        app.kubernetes.io/managed-by: flux
    spec:
      containers:
      - name: server
        image: node:20-slim # Using a slim image as npx will pull the server
        command:
          - "npx"
          - "-y"
          - "kubernetes-mcp-server@latest"
          - "--sse-port"
          - "8080"
          - "--kubeconfig"
          - "/kubeconfig/config" # Path inside the container where the secret will be mounted
        ports:
        - name: sse
          containerPort: 8080
          protocol: TCP
        env:
        - name: LOG_LEVEL 
          value: "info" # Or your preferred log level for the server
        volumeMounts:
        - name: kubeconfig-volume
          mountPath: "/kubeconfig" # Mount directory for the kubeconfig
          readOnly: true
      volumes:
      - name: kubeconfig-volume
        secret:
          secretName: kubeconfig-mcp # Name of the Secret (managed by SealedSecrets)