apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/created-by":"resource-stack","app.kubernetes.io/managed-by":"Lens","app.kubernetes.io/name":"lens-metrics"},"name":"kube-state-metrics","namespace":"lens-metrics"},"spec":{"replicas":1,"selector":{"matchLabels":{"name":"kube-state-metrics"}},"template":{"metadata":{"labels":{"name":"kube-state-metrics"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"image":"registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.11.0","name":"kube-state-metrics","ports":[{"containerPort":8080,"name":"metrics"}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8080},"initialDelaySeconds":5,"timeoutSeconds":5},"resources":{"limits":{"cpu":"200m","memory":"150Mi"},"requests":{"cpu":"10m","memory":"32Mi"}}}],"serviceAccountName":"kube-state-metrics"}}}}
    creationTimestamp: "2024-09-20T13:19:23Z"
    generation: 1
    labels:
      app.kubernetes.io/created-by: resource-stack
      app.kubernetes.io/managed-by: Lens
      app.kubernetes.io/name: lens-metrics
    name: kube-state-metrics
    namespace: lens-metrics
    resourceVersion: "20145318"
    uid: b2b03771-4080-41ce-bbf0-e021831ca2f0
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: kube-state-metrics
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: kube-state-metrics
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.11.0
          imagePullPolicy: IfNotPresent
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 150Mi
            requests:
              cpu: 10m
              memory: 32Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-state-metrics
        serviceAccountName: kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-09-20T13:19:23Z"
      lastUpdateTime: "2024-09-20T13:19:34Z"
      message: ReplicaSet "kube-state-metrics-847cd89659" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-12-15T01:15:35Z"
      lastUpdateTime: "2024-12-15T01:15:35Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
