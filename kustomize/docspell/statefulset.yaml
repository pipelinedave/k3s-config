apiVersion: v1
items:
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"name":"postgres","namespace":"docspell"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"postgres"}},"serviceName":"postgres","template":{"metadata":{"labels":{"app":"postgres"}},"spec":{"containers":[{"env":[{"name":"POSTGRES_USER","valueFrom":{"configMapKeyRef":{"key":"DOCSPELL_SERVER_BACKEND_JDBC_USER","name":"restserver-config-fk6475mbhc"}}},{"name":"POSTGRES_PASSWORD","valueFrom":{"secretKeyRef":{"key":"DOCSPELL_SERVER_BACKEND_JDBC_PASSWORD","name":"restserver-secrets-gk84cchbbh"}}},{"name":"POSTGRES_DB","value":"dbname"}],"image":"postgres:15.2","name":"postgres","ports":[{"containerPort":5432,"name":"postgres"}],"volumeMounts":[{"mountPath":"/var/lib/postgresql/data","name":"postgres-data"}]}]}},"volumeClaimTemplates":[{"metadata":{"name":"postgres-data"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}}}]}}
    creationTimestamp: "2023-08-11T15:14:47Z"
    generation: 1
    labels:
      app.kubernetes.io/component: postgres
      app.kubernetes.io/managed-by: dave
      app.kubernetes.io/name: docspell
      app.kubernetes.io/version: "1.0"
      k8slens-edit-resource-version: v1
    name: postgres
    namespace: docspell
    resourceVersion: "20145141"
    uid: 9ab1a05f-b2a0-4908-a4d7-12fedd79dcfc
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: postgres
    serviceName: postgres
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: postgres
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                key: DOCSPELL_SERVER_BACKEND_JDBC_USER
                name: restserver-config-fk6475mbhc
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: DOCSPELL_SERVER_BACKEND_JDBC_PASSWORD
                name: restserver-secrets-gk84cchbbh
          - name: POSTGRES_DB
            value: dbname
          image: postgres:15.2
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            name: postgres
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: postgres-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: postgres-656b464c4b
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: postgres-656b464c4b
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app":"solr"},"name":"solr","namespace":"docspell"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"solr"}},"serviceName":"solr","template":{"metadata":{"labels":{"app":"solr"}},"spec":{"containers":[{"command":["docker-entrypoint.sh","solr-precreate","docspell"],"image":"solr:9","livenessProbe":{"httpGet":{"path":"/solr/admin/info/system","port":8983},"initialDelaySeconds":60,"periodSeconds":10,"timeoutSeconds":5},"name":"solr","ports":[{"containerPort":8983}],"readinessProbe":{"httpGet":{"path":"/solr/admin/info/system","port":8983},"initialDelaySeconds":10,"periodSeconds":5,"timeoutSeconds":1},"volumeMounts":[{"mountPath":"/var/solr","name":"solr-data"}]}]}},"volumeClaimTemplates":[{"metadata":{"name":"solr-data"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}}}]}}
    creationTimestamp: "2023-08-11T15:14:47Z"
    generation: 4
    labels:
      app.kubernetes.io/component: solr-worker
      app.kubernetes.io/managed-by: dave
      app.kubernetes.io/name: docspell
      app.kubernetes.io/version: "1.0"
      k8slens-edit-resource-version: v1
    name: solr
    namespace: docspell
    resourceVersion: "34651685"
    uid: edf2f4e8-2491-48a2-b737-4fbf94366191
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: solr
    serviceName: solr
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: solr
      spec:
        containers:
        - command:
          - docker-entrypoint.sh
          - solr-precreate
          - docspell
          image: solr:9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /solr/admin/info/system
              port: 8983
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: solr
          ports:
          - containerPort: 8983
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /solr/admin/info/system
              port: 8983
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "2"
              memory: 8Gi
            requests:
              cpu: "1"
              memory: 4Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/solr
            name: solr-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 60
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: solr-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: solr-77678d9d8f
    observedGeneration: 4
    readyReplicas: 1
    replicas: 1
    updateRevision: solr-77678d9d8f
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
