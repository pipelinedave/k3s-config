apiVersion: v1
items:
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: uptime-kuma
      meta.helm.sh/release-namespace: uptime-kuma
    creationTimestamp: "2024-10-11T13:27:37Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: uptime-kuma
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: uptime-kuma
      app.kubernetes.io/version: 1.23.13
      helm.sh/chart: uptime-kuma-2.20.0
    name: uptime-kuma
    namespace: uptime-kuma
    resourceVersion: "20144915"
    uid: aee3f2dd-2781-49e0-9e37-5eedf430cc43
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: uptime-kuma
        app.kubernetes.io/name: uptime-kuma
    serviceName: uptime-kuma
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: uptime-kuma
          app.kubernetes.io/name: uptime-kuma
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: UPTIME_KUMA_PORT
            value: "3001"
          image: louislam/uptime-kuma:1.23.13-debian
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - extra/healthcheck
            failureThreshold: 3
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: uptime-kuma
          ports:
          - containerPort: 3001
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 3001
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/data
            name: storage
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 30
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: storage
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: uptime-kuma-76674c9fbf
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: uptime-kuma-76674c9fbf
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
