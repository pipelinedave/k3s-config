# This file will configure the Helm release for Supabase.
# It will reference the GitRepository defined in supabase-community-gitsource.yaml
# and specify the chart version and values for the Supabase deployment.
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: supabase
  namespace: supabase # Deploys Supabase into its own namespace
spec:
  interval: 5m
  chart:
    spec:
      chart: ./charts/supabase # Path to the chart within the GitRepository
      version: "0.5.14" # Specify a stable chart version, update as needed
      sourceRef:
        kind: GitRepository # Changed from HelmRepository
        name: supabase-community-repo # Name of the GitRepository resource
        namespace: flux-system # Namespace of the GitRepository resource
      reconcileStrategy: ChartVersion # Or Revision if you want to track git commits
  values:
    supabasePublicURL: "https://supabase-api.stillon.top"

    # Global labels using the chart's expected structure
    supabase:
      labels:
        app.kubernetes.io/instance: supabase
        app.kubernetes.io/managed-by: flux
        app.kubernetes.io/part-of: supabase
        # app.kubernetes.io/version will be set by the chart or can be added here

    # Configure global secrets by referencing the existing k8s secret
    secret:
      jwt:
        secretRef: "supabase-initial-config" # Name of your sealed secret
        secretRefKey:
          anonKey: "ANON_KEY"       # Maps to 'anonKey' in the chart
          serviceKey: "SERVICE_KEY" # Maps to 'serviceKey' in the chart
          secret: "JWT_SECRET"      # Maps to 'secret' (JWT secret) in the chart
      db: # For services connecting to the DB, not for the DB pod itself
        secretRef: "supabase-initial-config"
        secretRefKey:
          # The chart expects 'password', 'username', 'database' under secret.db.secretRefKey
          # if secret.db.secretRef is used.
          password: "POSTGRES_PASSWORD"
          username: "POSTGRES_USER" # Assuming POSTGRES_USER is in your secret for other services
          database: "POSTGRES_DB"   # Assuming POSTGRES_DB is in your secret for other services
        # Provide username and database name directly if they are NOT in the secret
        # and you want to use fixed values for services connecting to the DB.
        # However, the chart's values.yaml implies these can come from the secretRef.
        # Let's assume they are in the secret for now. If not, we'd set them here:
        # username: "postgres" # This would be used if not found via secretRefKey.username
        # database: "postgres" # This would be used if not found via secretRefKey.database
      dashboard: # For Studio dashboard login
        secretRef: "supabase-initial-config"
        secretRefKey:
          username: "DASHBOARD_USERNAME"
          password: "DASHBOARD_PASSWORD"
      # smtp and s3 remain disabled as per previous configuration

    # PostgreSQL (db)
    # This component's secret (POSTGRES_PASSWORD) is configured directly below
    # as it's for the database pod itself. The global secret.db is for other services.
    db:
      enabled: true
      persistence:
        enabled: true
        annotations: # PVC Protection
          "kubernetes.io/pvc-protection": "true"
        # storageClass: "your-storage-class"
        # size: 10Gi
      environment:
        # These are for the PostgreSQL instance itself
        POSTGRES_USER: "postgres" # User for the DB instance
        POSTGRES_DB: "postgres"   # Database name for the DB instance
        POSTGRES_PASSWORD:        # Password for the DB instance
          valueFrom:
            secretKeyRef:
              name: supabase-initial-config
              key: POSTGRES_PASSWORD
        # Any other DB specific env vars from chart's values.yaml for db component

    # Supabase Studio
    studio:
      environment:
        STUDIO_DEFAULT_ORGANIZATION: "Stillon Org"
        STUDIO_DEFAULT_PROJECT: "Main Project"
        SUPABASE_PUBLIC_URL: "https://supabase-api.stillon.top" # Used by Studio
        NEXT_PUBLIC_ENABLE_LOGS: "true"
        SUPABASE_URL: "https://supabase-api.stillon.top" # Used by Studio
        # ANON_KEY and SERVICE_KEY will be injected by the chart via global secret.jwt
        # DASHBOARD_PASSWORD will be injected by the chart via global secret.dashboard
      # config: block for LOGIN_PASSWORD removed as it's handled by global secret.dashboard
      ingress:
        enabled: true
        className: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          nginx.ingress.kubernetes.io/proxy-body-size: "500m"
        hosts:
          - host: supabase-studio.stillon.top
            paths:
              - path: /
                pathType: ImplementationSpecific
        tls:
          - secretName: supabase-studio-tls
            hosts:
              - supabase-studio.stillon.top

    # Supabase Auth
    auth:
      environment:
        API_EXTERNAL_URL: "https://supabase-api.stillon.top"
        GOTRUE_SITE_URL: "https://supabase-api.stillon.top"
        GOTRUE_EXTERNAL_EMAIL_ENABLED: "false" # SMTP is disabled
        GOTRUE_MAILER_AUTOCONFIRM: "true"
        # JWT_SECRET, ANON_KEY, SERVICE_KEY will be injected by the chart via global secret.jwt
        # DB connection details (like DB_PASSWORD) for Auth should come from global secret.db

    # Supabase REST (PostgREST)
    rest:
      environment:
        PGRST_DB_ANON_ROLE: "anon" # Default, ensure this role exists
        # PGRST_JWT_SECRET will be injected by the chart via global secret.jwt
        # Database connection details for PostgREST (user, pass, host, port, name)
        # should be derived by the chart using global secret.db and other defaults.
        # We only override if necessary and if the chart supports it.
        # For now, remove explicit PGRST_DB_PASSWORD, PGRST_DB_USER etc.
        # Rely on the chart to use the global secret.db.
        PGRST_DB_HOST: "supabase-db" # Explicitly set host, chart might default but good to be clear
        PGRST_DB_PORT: "5432"

    # Supabase Realtime
    realtime:
      enabled: true # Ensure realtime is enabled if you need it
      environment:
        DB_HOST: "supabase-db"
        DB_PORT: "5432"
        # DB_USER should come from global secret.db.username if defined there and chart uses it
        DB_SSL: "false" # Assuming internal traffic
        # JWT_SECRET will be injected by the chart via global secret.jwt
        # DB_PASSWORD should come from global secret.db.password

    # Supabase Meta (for migrations, schema introspection)
    meta:
      environment:
        POSTGRES_HOST: "supabase-db"
        POSTGRES_PORT: "5432"
        # POSTGRES_USER, POSTGRES_DATABASE, POSTGRES_PASSWORD
        # should be derived by the chart using global secret.db.

    # Supabase Storage
    storage:
      persistence:
        enabled: true
        annotations: # PVC Protection
          "kubernetes.io/pvc-protection": "true"
        # storageClass: "your-storage-class"
        # size: 100Gi
      environment:
        PG_META_URL: "http://supabase-meta:8080" # Service name for meta
        # ANON_KEY, SERVICE_KEY, JWT_SECRET will be injected by chart via global secret.jwt
        # Database connection details for Storage (user, pass, host, port, name)
        # should be derived by the chart using global secret.db.
        POSTGRES_HOST: "supabase-db" # Explicitly set host

    # Supabase Functions
    functions:
      enabled: true # Enable if you plan to use Supabase Functions
      environment:
        # JWT_SECRET, ANON_KEY, SERVICE_KEY are typically needed and should be injected by chart
        # Database connection details for Functions:
        DB_HOST: "supabase-db"
        DB_PORT: "5432"
        DB_SSL: "disable"
        DB_USERNAME: "supabase_functions_admin" # As per chart's values.yaml default
        # DB_PASSWORD for supabase_functions_admin:
        # If this user needs a password and it's in supabase-initial-config, map it here.
        # For now, assuming chart handles or it's passwordless/trust.
        # If errors persist for functions, add:
        # DB_PASSWORD:
        #   valueFrom:
        #     secretKeyRef:
        #       name: supabase-initial-config
        #       key: FUNCTIONS_DB_PASSWORD # (Assuming you add this key to your secret)

    # Kong API Gateway
    kong:
      environment:
        KONG_ADMIN_LISTEN: "0.0.0.0:8001"
        KONG_PROXY_LISTEN: "0.0.0.0:8000"
        KONG_STATUS_LISTEN: "0.0.0.0:8002" # Optional status endpoint
        KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: "16k"
        KONG_NGINX_PROXY_PROXY_BUFFERS: "4 16k"
        # ANON_KEY, SERVICE_KEY, JWT_SECRET are used by Kong plugins,
        # chart should configure Kong declarative config using global secrets.
      ingress:
        enabled: true
        className: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          nginx.ingress.kubernetes.io/proxy-body-size: "500m" # Increased for large file uploads via API
        hosts:
          - host: supabase-api.stillon.top
            paths:
              - path: /
                pathType: ImplementationSpecific # Or Prefix
        tls:
          - secretName: supabase-api-tls
            hosts:
              - supabase-api.stillon.top

    # Image Proxy (imgproxy)
    imgproxy:
      enabled: true # Enable if you use storage and need image transformations
      persistence:
        enabled: true # If you want to cache transformed images on disk
        annotations: # PVC Protection
          "kubernetes.io/pvc-protection": "true"
        # storageClass: "your-storage-class"
        # size: 20Gi

    # Analytics, Vector, Minio are disabled by default in this configuration
    analytics:
      enabled: false
    vector:
      enabled: false
    minio: # Using file storage backend for Supabase Storage, so Minio is not needed
      enabled: false

    # SMTP settings (globally disabled)
    # If you were to enable SMTP, you'd configure it here, likely with a secretRef
    # smtp:
    #   host: your.smtp.server
    #   port: 587
    #   username: your_smtp_user
    #   password:
    #     valueFrom:
    #       secretKeyRef:
    #         name: supabase-initial-config # Assuming SMTP pass is in this secret
    #         key: SMTP_PASSWORD
    #   sender_name: "Supabase Staging"
    #   admin_email: "admin@stillon.top"
    #   # ... other SMTP settings from chart's values.yaml

