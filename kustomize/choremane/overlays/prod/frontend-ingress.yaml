apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # Update configuration-snippet to exclude reset.html from catch-all
    nginx.ingress.kubernetes.io/configuration-snippet: |
      # Don't redirect /reset.html
      location = /reset.html {
        try_files $uri =404;
      }
      # For all other paths, try the file/directory or fall back to index.html
      location / {
        try_files $uri $uri/ /index.html;
      }
    description: "Ingress for Choremane frontend (SPA/PWA) in production (main branch)."
  labels:
    app.kubernetes.io/name: choremane
    app.kubernetes.io/component: frontend-ingress
    app.kubernetes.io/part-of: choremane
    app.kubernetes.io/managed-by: flux
    app.kubernetes.io/instance: choremane-prod
    app.kubernetes.io/version: main
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - chores.stillon.top
      secretName: chores-stillon-top-tls
  rules:
    - host: chores.stillon.top
      http:
        paths:
          # API path must come first for proper routing precedence
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 80
          # Add explicit path for reset.html to ensure it's properly served
          - path: /reset.html
            pathType: Exact
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
          # Frontend path for everything else
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
