apiVersion: v1
items:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "3"
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"miniflux","namespace":"miniflux"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"miniflux"}},"template":{"metadata":{"labels":{"app":"miniflux"}},"spec":{"containers":[{"env":[{"name":"DATABASE_URL","value":"postgres://miniflux:uIJdecZ7BXpDNmeWpqq1RzxKq8A5LWrQ4@postgres:5432/miniflux?sslmode=disable"},{"name":"RUN_MIGRATIONS","value":"1"},{"name":"CREATE_ADMIN","value":"1"},{"name":"ADMIN_USERNAME","value":"dave"},{"name":"ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"key":"adminpassword","name":"miniflux-secrets"}}}],"image":"miniflux/miniflux:latest","name":"miniflux","ports":[{"containerPort":8080}],"resources":{"limits":{"cpu":"500m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"512Mi"}}}]}}}}
      name: miniflux
      namespace: miniflux
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: miniflux
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: miniflux
        spec:
          containers:
            - env:
                - name: DATABASE_URL
                  value: postgres://miniflux:uIJdecZ7BXpDNmeWpqq1RzxKq8A5LWrQ4@postgres:5432/miniflux?sslmode=disable
                - name: RUN_MIGRATIONS
                  value: "1"
                - name: CREATE_ADMIN
                  value: "1"
                - name: ADMIN_USERNAME
                  value: dave
                - name: ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: adminpassword
                      name: miniflux-secrets
              image: miniflux/miniflux:latest
              imagePullPolicy: Always
              name: miniflux
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "3"
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"postgres","namespace":"miniflux"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"postgres"}},"template":{"metadata":{"labels":{"app":"postgres"}},"spec":{"containers":[{"env":[{"name":"POSTGRES_USER","value":"miniflux"},{"name":"POSTGRES_PASSWORD","valueFrom":{"secretKeyRef":{"key":"pgpassword","name":"miniflux-secrets"}}},{"name":"POSTGRES_DB","value":"miniflux"}],"image":"postgres:13","name":"postgres","ports":[{"containerPort":5432}],"resources":{"limits":{"cpu":"500m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"512Mi"}},"volumeMounts":[{"mountPath":"/var/lib/postgresql/data","name":"postgres-data"}]}],"volumes":[{"name":"postgres-data","persistentVolumeClaim":{"claimName":"postgres-pvc"}}]}}}}
      name: postgres
      namespace: miniflux
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: postgres
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: postgres
        spec:
          containers:
            - env:
                - name: POSTGRES_USER
                  value: miniflux
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: pgpassword
                      name: miniflux-secrets
                - name: POSTGRES_DB
                  value: miniflux
              image: postgres:13
              imagePullPolicy: IfNotPresent
              name: postgres
              ports:
                - containerPort: 5432
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/lib/postgresql/data
                  name: postgres-data
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: postgres-data
              persistentVolumeClaim:
                claimName: postgres-pvc
kind: List
metadata: {}
