apiVersion: apps/v1
kind: Deployment
metadata:
  name: adguard-deployment
  namespace: adguard-home
  labels:
    app.kubernetes.io/name: adguard
    app.kubernetes.io/instance: adguard
    app.kubernetes.io/component: application
    app.kubernetes.io/part-of: adguard
    app.kubernetes.io/managed-by: flux
  annotations:
    description: "Deployment for AdGuard Home adblocking solution."
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  selector:
    matchLabels:
      app: adguard-home
  template:
    metadata:
      labels:
        app: adguard-home
        app.kubernetes.io/name: adguard
        app.kubernetes.io/instance: adguard
        app.kubernetes.io/component: application
        app.kubernetes.io/part-of: adguard
    spec:
      securityContext:
        fsGroup: 1000
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      initContainers:
      - name: init-config
        image: busybox
        command:
        - /bin/sh
        - -c
        - echo "Initializing AdGuard Home configuration"
      containers:
      - name: adguard-home
        image: adguard/adguardhome:v0.107.41
        imagePullPolicy: IfNotPresent
        env:
        - name: AGH_CONFIG
          valueFrom:
            configMapKeyRef:
              name: adguard-config
              key: AdGuardHome.yaml
        ports:
        - containerPort: 53
          name: dns-udp
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 3000
          name: http-initial
          protocol: TCP
        - containerPort: 80
          name: http
          protocol: TCP
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        securityContext:
          readOnlyRootFilesystem: false
          runAsNonRoot: false
          # runAsUser: 1000          allowPrivilegeEscalation: true
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 5
        volumeMounts:
        - name: adguard-data
          mountPath: /opt/adguardhome/work
        - name: adguard-config-pvc
          mountPath: /adguardhome/conf
      volumes:
      - name: adguard-data
        persistentVolumeClaim:
          claimName: adguard-pvc
      - name: adguard-config-pvc
        persistentVolumeClaim:
          claimName: adguard-config-pvc
